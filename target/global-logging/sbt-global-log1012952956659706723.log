[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Maciek\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Maciek\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 17.0.1)
[debug]       Load.loadUnit: plugins took 91.6252ms
[debug]       Load.loadUnit: defsScala took 0.2537ms
[debug] [Loading] Scanning directory C:\Users\Maciek\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Maciek\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 16.2783 ms
[debug]           Load.resolveProject(global-plugins) took 49.5102ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Maciek\.sbt\1.0\plugins, plugins: List(<none>))) took 87.5546ms
[debug] [Loading] Done in C:\Users\Maciek\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 112.9102ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2208ms
[debug]     Load.loadUnit(file:/C:/Users/Maciek/.sbt/1.0/plugins/, ...) took 214.1602ms
[debug]   Load.apply: load took 419.8642ms
[debug]   Load.apply: resolveProjects took 12.0858ms
[debug]   Load.apply: finalTransforms took 88.4566ms
[debug]   Load.apply: config.delegates took 8.3826ms
[debug]   Load.apply: Def.make(settings)... took 402.5806ms
[debug]   Load.apply: structureIndex took 89.8486ms
[debug]   Load.apply: mkStreams took 1.7532ms
[info] loading global plugins from C:\Users\Maciek\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5040.7227ms
[debug]           Load.loadUnit: plugins took 28.7242ms
[debug]           Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Users\Maciek\IdeaProjects\BigData\project
[debug]             Load.loadUnit: mkEval took 6.4059ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Maciek\IdeaProjects\BigData\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.1965 ms
[info] loading settings for project bigdata-build from idea.sbt ...
[debug]               Load.resolveProject(bigdata-build) took 2.3974ms
[debug]             Load.loadTransitive: finalizeProject(Project(id bigdata-build, base: C:\Users\Maciek\IdeaProjects\BigData\project, plugins: List(<none>))) took 3.983ms
[debug] [Loading] Done in C:\Users\Maciek\IdeaProjects\BigData\project, returning: (bigdata-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1796.4476ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.9753ms
[debug]         Load.loadUnit(file:/C:/Users/Maciek/IdeaProjects/BigData/project/, ...) took 1830.8823ms
[debug]       Load.apply: load took 1832.1578ms
[debug]       Load.apply: resolveProjects took 0.0922ms
[debug]       Load.apply: finalTransforms took 7.4669ms
[debug]       Load.apply: config.delegates took 0.306ms
[debug]       Load.apply: Def.make(settings)... took 68.8441ms
[debug]       Load.apply: structureIndex took 37.0529ms
[debug]       Load.apply: mkStreams took 0.0029ms
[info] loading project definition from C:\Users\Maciek\IdeaProjects\BigData\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3622.9828ms
[debug]     Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Users\Maciek\IdeaProjects\BigData
[debug]       Load.loadUnit: mkEval took 0.2478ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.6234 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 33.4353ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Maciek\IdeaProjects\BigData, plugins: List(<none>))) took 36.7222ms
[debug] [Loading] Done in C:\Users\Maciek\IdeaProjects\BigData, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2018.5592ms
[debug]     Load.loadUnit: cleanEvalClasses took 22.314ms
[debug]   Load.loadUnit(file:/C:/Users/Maciek/IdeaProjects/BigData/, ...) took 5664.6454ms
[debug] Load.apply: load took 5666.0524ms
[debug] Load.apply: resolveProjects took 0.0945ms
[debug] Load.apply: finalTransforms took 29.733ms
[debug] Load.apply: config.delegates took 0.3348ms
[debug] Load.apply: Def.make(settings)... took 71.5154ms
[debug] Load.apply: structureIndex took 29.4532ms
[debug] Load.apply: mkStreams took 0.0016ms
[info] set current project to BigData (in build file:/C:/Users/Maciek/IdeaProjects/BigData/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 57398 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 57398, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to BigData (in build file:/C:/Users/Maciek/IdeaProjects/BigData/)
[debug] > Exec(idea-shell, None, None)
